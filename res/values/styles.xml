<?xml version="1.0" encoding="utf-8"?>
<!-- 
	* Copyright (C) 2007 Google Inc.
	*
	* Licensed under the Apache License, Version 2.0 (the "License");
	* you may not use this file except in compliance with the License.
	* You may obtain a copy of the License at
	*
	*      http://www.apache.org/licenses/LICENSE-2.0
	*
	* Unless required by applicable law or agreed to in writing, software
	* distributed under the License is distributed on an "AS IS" BASIS,
	* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	* See the License for the specific language governing permissions and
	* limitations under the License.
-->

<resources>
	<!-- Base application theme is the default theme. -->
	<style name="Theme" parent="android:Theme"></style>

	<!-- Variation on our application theme that forces a plain
		text style. -->
	<style name="Theme.PlainText">
		<item name="android:textAppearance">
			@style/TextAppearance.Theme.PlainText
		</item>
	</style>

	<!-- Variation on our application theme that has a black
		background. -->
	<style name="Theme.Black">
		<item name="android:windowBackground">
			@drawable/screen_background_black
		</item>
	</style>

	<!-- A theme that has a translucent background.  Here we explicitly specify
		that this theme is to inherit from the system's translucent theme,
		which sets up various attributes correctly.. -->
	<style name="Theme.Translucent"
		parent="android:style/Theme.Translucent">
		<item name="android:windowBackground">
			@drawable/translucent_background
		</item>
		<item name="android:windowNoTitle">true</item>
		<item name="android:colorForeground">#fff</item>
	</style>

	<!-- A theme that has a translucent background.  Here we explicitly specify
		that this theme is to inherit from the system's translucent theme,
		which sets up various attributes correctly.. -->
	<style name="Theme.Translucent.darker"
		parent="android:style/Theme.Translucent">
		<item name="android:windowBackground">
			@drawable/translucent_background_darker
		</item>
		<item name="android:windowNoTitle">true</item>
		<item name="android:colorForeground">#fff</item>
	</style>

	<!-- Variation on our application theme that has a transparent
		background; this example completely removes the background,
		allowing the activity to decide how to composite.  Also here we
		force the translucency ourself rather than making use of the built-in
		translucent theme. -->
	<style name="Theme.Transparent" parent="android:Theme">
		<item name="android:windowIsTranslucent">true</item>
		<item name="android:windowBackground">@android:color/transparent</item>
		<item name="android:windowNoTitle">true</item>
	</style>




	<style name="TextAppearance.Theme.PlainText"
		parent="android:TextAppearance.Theme">
		<item name="android:textStyle">normal</item>
	</style>
	
	<style name="core_ButtonText">
	    <item name="android:layout_width">fill_parent</item>
	    <item name="android:layout_height">wrap_content</item>
	    <item name="android:textColor">#ffffff</item>
	    <item name="android:gravity">center</item>	  
	    <item name="android:textStyle">bold</item>
	    <item name="android:shadowColor">#000000</item>
	    <item name="android:shadowDx">1</item>
	    <item name="android:shadowDy">1</item>
	    <item name="android:shadowRadius">2</item>
	</style>	

</resources>
